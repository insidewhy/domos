var SWITCH_ATTRS = ['opacity', 'width', 'height']

// in chromium dimensions/opacity after transitions are not always exact
// so allow this much deviation when testing for completion
var VERY_SMALL = 0.00001

// Nothing we can do but work around this firefox bug without afflicting
// other browsers with the delay :(
// https://bugzil.la/849399
var FFX_SWITCH_BUG =
  /Firefox\/1[0-9](?:\.[0-9]+)?/.test(navigator.userAgent)

/// Transition selector containing one or many HTML elements.
export function transition(node, name, value, callback) {
  var changes
  if (typeof name === 'string') {
    changes = {}
    changes[name] = value
  }
  else {
    changes = name
    callback = value
  }

  var changeTypes = Object.keys(changes),
      nChanges    = changeTypes.length

  // show node but only if we need to
  if (changeTypes.some(type =>
        SWITCH_ATTRS.indexOf(type) !== -1 &&
        parseFloat(changes[type]) > VERY_SMALL))
  {
    node.show()
  }

  var nTrans = node.length
  if (! callback || nTrans === 1) {
    transitionElement(node, changeTypes, changes, callback)
  }
  else {
    var hasBeenCancelled = false, nTransitions = node.length

    var onSingleTransition = cancelled => {
      if (hasBeenCancelled)
        return

      if (cancelled)
        callback(hasBeenCancelled = true)
      else if (! --nTrans)
        callback()
    }

    for (var i = 0; i < node.length; ++i)
      transitionElement($(node[i]), changeTypes, changes, onSingleTransition)
  }
}

var compCss = (node, type) =>
  getComputedStyle(node[0], null)[type]

/// Transition selector containing single HTML element.
function transitionElement(node, changeTypes, changes, callback) {
  node.css(changes)

  var pendingChanges = () =>
    changeTypes.some(type =>
      Math.abs(parseFloat(compCss(node, type))
               - parseFloat(changes[type])) > VERY_SMALL)

  var transitionHelper = () => {
    if (pendingChanges()) {
      var nod = node[0]

      var handleTransition = e => {
        if (! e) {
          // boolean indicates transition was cancelled by another.
          if (callback)
            callback(true)
          return
        }

        if (SWITCH_ATTRS.indexOf(e.propertyName) !== -1 &&
            parseFloat(compCss(node, e.propertyName)) < VERY_SMALL)
        {
          node.css('display', 'none')
        }

        if (! pendingChanges()) {
          delete nod.__domosTransition
          nod.removeEventListener('transitionend', handleTransition)
          nod.removeEventListener('webkitTransitionEnd', handleTransition)
          if (callback)
            callback()
        }
      }

      if (nod.__domosTransition) {
        nod.removeEventListener('transitionend', nod.__domosTransition)
        nod.removeEventListener('webkitTransitionEnd', nod.__domosTransition)
        // show it has cancelled
        nod.__domosTransition(null)
      }
      nod.__domosTransition = handleTransition

      nod.addEventListener('transitionend', handleTransition)
      nod.addEventListener('webkitTransitionEnd', handleTransition)
    }
    else {
      if (changeTypes.some(type =>
            SWITCH_ATTRS.indexOf(type) !== -1 &&
            parseFloat(changes[type]) < VERY_SMALL))
      {
          node.css('display', 'none')
      }

      if (callback)
        callback()
    }
  }

  if (FFX_SWITCH_BUG)
    setTimeout(transitionHelper, 10)
  else
    transitionHelper()
}

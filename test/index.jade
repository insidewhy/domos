html
  head
    script(src="http://code.jquery.com/jquery-1.9.1.min.js")
    script(src="http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.4.4/underscore-min.js")
    script(src="http://cdnjs.cloudflare.com/ajax/libs/backbone.js/0.9.10/backbone-min.js")
    script(src="domos.src.js")
    script(type="text/javascript")
      function runTransTest() {
        var block1 = $('#block1'),
            block2 = $('#block2'),
            block3 = $('#block3')

        // transition height and fade out at the same time
        domos.transition(block1, { height: 200, opacity: 0 }, function() {
          // then after a short while...
          // fade the same block back in
          domos.transition(block1, 'opacity', 1, function(cancel) {
            // then fade the middle block out which has no transition
            // so the following callback will fire immediately
            domos.transition(block2, 'opacity', 0, function() {
              // transition last block from auto to height 300
              domos.transition(block3, 'height', '300px', function(cncld) {
                if (! cncld)
                  alert('cancel failed')
              })

              // but sneak another transaction in before it has finished
              // in order to cancel it
              setTimeout(function() {
                domos.transition(block3, 'height', '150px', function(cncld) {
                  if (cncld)
                    alert('should not be cancelled')
                  // then transition it to size auto
                  domos.transition(block3, 'height', 'auto', function(cncld) {
                    // fade back in immediately
                    domos.transition(block2, 'opacity', 1)
                  })
                })
              }, 400)
            })
          })
        })
      }
    script(type="text/javascript")
      function runStatesTest() {
        var state = new domos.State()

        state.restore({ 'view':  'article', 'login': null })
        setTimeout(function() {
          state.set('login', 'identified')
        }, 1000)

        // runs before transitions
        // state.on('before:login=identified', function() { })

        // runs after transitions
        state.on('login=identified', function () {
          // TODO:
        })
      }
    link(rel="stylesheet", type="text/css", href="index.css")
  body
    article
      h1 Transition effects
      #block3
        h1 A
      #block2
      #block1
      footer
        a(href="javascript:void(0)", onclick="runTransTest()") Run
    article
      h1 States
      div(data-s-login="!identified")
        | Hello unidentified friend
      div(data-s-login="identified|special")
        | Hello identified user
      div(data-s-login="special")
        | You are special
      div(data-s-view="article")
        | This is the article view
      div(data-s-view="!article")
        | This is the footer which can only be seen not in article view
      footer
        a(href="javascript:void(0)", onclick="runStatesTest()") Run
